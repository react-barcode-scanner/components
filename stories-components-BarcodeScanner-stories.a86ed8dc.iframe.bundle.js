"use strict";(globalThis.webpackChunk_react_barcode_scanner_components=globalThis.webpackChunk_react_barcode_scanner_components||[]).push([[74],{"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/BarcodeScanner.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'@property --video-border {\n    syntax: "*";\n    inherits: true;\n    initial-value: none;\n}\n\n@property --scanline {\n    syntax: "*";\n    inherits: true;\n    initial-value: none;\n}\n\n@property --video-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 640px;\n}\n\n@property --video-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 480px;\n}\n\n@property --video-blur {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 3px;\n}\n\n@property --video-crop-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 0;\n}\n\n@property --video-crop-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 0;\n}\n\n@property --canvas-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 320px;\n}\n\n@property --canvas-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 240px;\n}\n\n@property --video-animation-state {\n    syntax: "<*>";\n    inherits: false;\n    initial-value: paused;\n}\n\n@property --animated-video-width {\n    syntax: "<length>";\n    inherits: false;\n    initial-value: 0;\n}\n\n@property --animated-video-height {\n    syntax: "<length>";\n    inherits: false;\n    initial-value: 0;\n}\n\n@keyframes grow-scanner-container {\n    from {\n        --animated-video-width: 0;\n        --animated-video-height: 0;\n        transform: scale(0);\n    }\n    to {\n        --animated-video-width: var(--video-crop-width);\n        --animated-video-height: var(--video-crop-height);\n        width: var(--video-crop-width);\n        height: var(--video-crop-height);\n        transform: scale(1);\n    }\n}\n\n.react-barcode-scanner-container {\n    --video-element-width: calc(var(--video-width) - var(--video-blur) * 2);\n    --video-element-height: calc(var(--video-height) - var(--video-blur) * 2);\n\n    --video-element-top: calc(\n            (var(--video-crop-height) - var(--video-element-height)) / 2 - var(--video-blur)\n    );\n    --video-element-left: calc(\n            (var(--video-crop-width) - var(--video-element-width)) / 2 - var(--video-blur)\n    );\n\n    --canvas-element-left: calc(\n            (var(--video-crop-width) - var(--canvas-width)) / 2 -\n            var(--video-blur)\n    );\n    --canvas-element-top: calc(\n            (var(--video-crop-height) - var(--canvas-height)) / 2 -\n            var(--video-blur)\n    );\n\n    display: flex;\n    justify-content: center;\n\n    border: var(--video-border);\n    position: relative;\n    overflow: hidden;\n    width: var(--video-crop-width);\n    height: var(--video-crop-height);\n}\n.react-barcode-scanner-container.animate {\n    animation: grow-scanner-container 0.4s linear 1;\n    animation-play-state: paused;\n}\n.react-barcode-scanner-container > canvas {\n    position: absolute;\n    left: var(--canvas-element-left);\n    top: var(--canvas-element-top);\n    width: var(--canvas-width);\n    height: var(--canvas-height);\n}\n\n.react-barcode-scanner-container > video {\n    position: absolute;\n    top: var(--video-element-top);\n    left: var(--video-element-left);\n    filter: blur(var(--video-blur));\n}\n\n.scanline {\n    position: absolute;\n    left: var(--canvas-element-left);\n    top: var(--canvas-element-top);\n    width: var(--canvas-width);\n    height: 1px;\n    overflow: hidden;\n\n    border-top: var(--scanline);\n\n    animation-name: scanline;\n    animation-iteration-count: infinite;\n    animation-duration: 1.5s;\n    animation-timing-function: linear;\n}\n\n@keyframes scanline {\n    from {\n        top: var(--canvas-element-top);\n    }\n    to {\n        top: calc(var(--canvas-element-top) + var(--canvas-height));\n    }\n}\n',"",{version:3,sources:["webpack://./src/components/BarcodeScanner.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI;QACI,yBAAyB;QACzB,0BAA0B;QAC1B,mBAAmB;IACvB;IACA;QACI,+CAA+C;QAC/C,iDAAiD;QACjD,8BAA8B;QAC9B,gCAAgC;QAChC,mBAAmB;IACvB;AACJ;;AAEA;IACI,uEAAuE;IACvE,yEAAyE;;IAEzE;;KAEC;IACD;;KAEC;;IAED;;;KAGC;IACD;;;KAGC;;IAED,aAAa;IACb,uBAAuB;;IAEvB,2BAA2B;IAC3B,kBAAkB;IAClB,gBAAgB;IAChB,8BAA8B;IAC9B,gCAAgC;AACpC;AACA;IACI,+CAA+C;IAC/C,4BAA4B;AAChC;AACA;IACI,kBAAkB;IAClB,gCAAgC;IAChC,8BAA8B;IAC9B,0BAA0B;IAC1B,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,6BAA6B;IAC7B,+BAA+B;IAC/B,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,gCAAgC;IAChC,8BAA8B;IAC9B,0BAA0B;IAC1B,WAAW;IACX,gBAAgB;;IAEhB,2BAA2B;;IAE3B,wBAAwB;IACxB,mCAAmC;IACnC,wBAAwB;IACxB,iCAAiC;AACrC;;AAEA;IACI;QACI,8BAA8B;IAClC;IACA;QACI,2DAA2D;IAC/D;AACJ",sourcesContent:['@property --video-border {\n    syntax: "*";\n    inherits: true;\n    initial-value: none;\n}\n\n@property --scanline {\n    syntax: "*";\n    inherits: true;\n    initial-value: none;\n}\n\n@property --video-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 640px;\n}\n\n@property --video-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 480px;\n}\n\n@property --video-blur {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 3px;\n}\n\n@property --video-crop-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 0;\n}\n\n@property --video-crop-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 0;\n}\n\n@property --canvas-width {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 320px;\n}\n\n@property --canvas-height {\n    syntax: "<length>";\n    inherits: true;\n    initial-value: 240px;\n}\n\n@property --video-animation-state {\n    syntax: "<*>";\n    inherits: false;\n    initial-value: paused;\n}\n\n@property --animated-video-width {\n    syntax: "<length>";\n    inherits: false;\n    initial-value: 0;\n}\n\n@property --animated-video-height {\n    syntax: "<length>";\n    inherits: false;\n    initial-value: 0;\n}\n\n@keyframes grow-scanner-container {\n    from {\n        --animated-video-width: 0;\n        --animated-video-height: 0;\n        transform: scale(0);\n    }\n    to {\n        --animated-video-width: var(--video-crop-width);\n        --animated-video-height: var(--video-crop-height);\n        width: var(--video-crop-width);\n        height: var(--video-crop-height);\n        transform: scale(1);\n    }\n}\n\n.react-barcode-scanner-container {\n    --video-element-width: calc(var(--video-width) - var(--video-blur) * 2);\n    --video-element-height: calc(var(--video-height) - var(--video-blur) * 2);\n\n    --video-element-top: calc(\n            (var(--video-crop-height) - var(--video-element-height)) / 2 - var(--video-blur)\n    );\n    --video-element-left: calc(\n            (var(--video-crop-width) - var(--video-element-width)) / 2 - var(--video-blur)\n    );\n\n    --canvas-element-left: calc(\n            (var(--video-crop-width) - var(--canvas-width)) / 2 -\n            var(--video-blur)\n    );\n    --canvas-element-top: calc(\n            (var(--video-crop-height) - var(--canvas-height)) / 2 -\n            var(--video-blur)\n    );\n\n    display: flex;\n    justify-content: center;\n\n    border: var(--video-border);\n    position: relative;\n    overflow: hidden;\n    width: var(--video-crop-width);\n    height: var(--video-crop-height);\n}\n.react-barcode-scanner-container.animate {\n    animation: grow-scanner-container 0.4s linear 1;\n    animation-play-state: paused;\n}\n.react-barcode-scanner-container > canvas {\n    position: absolute;\n    left: var(--canvas-element-left);\n    top: var(--canvas-element-top);\n    width: var(--canvas-width);\n    height: var(--canvas-height);\n}\n\n.react-barcode-scanner-container > video {\n    position: absolute;\n    top: var(--video-element-top);\n    left: var(--video-element-left);\n    filter: blur(var(--video-blur));\n}\n\n.scanline {\n    position: absolute;\n    left: var(--canvas-element-left);\n    top: var(--canvas-element-top);\n    width: var(--canvas-width);\n    height: 1px;\n    overflow: hidden;\n\n    border-top: var(--scanline);\n\n    animation-name: scanline;\n    animation-iteration-count: infinite;\n    animation-duration: 1.5s;\n    animation-timing-function: linear;\n}\n\n@keyframes scanline {\n    from {\n        top: var(--canvas-element-top);\n    }\n    to {\n        top: calc(var(--canvas-element-top) + var(--canvas-height));\n    }\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */");return[content].concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{module.exports=function domAPI(options){if("undefined"==typeof document)return{update:function update(){},remove:function remove(){}};var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/stories/components/BarcodeScanner.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BarcodeScanner_stories});var react=__webpack_require__("./node_modules/react/index.js");const listDevices=async()=>{let devices=await(navigator.mediaDevices?.enumerateDevices?.());return devices?.filter((device=>"videoinput"===device.kind))??[]},getMediaConstraintsForDeviceChoiceOptions=(deviceList,deviceChoiceOptions)=>{const constraints={audio:!1,video:!0};if(0===deviceList.length)return;if(1===deviceList.length)return constraints;let advancedConstraints=[],{deviceId}=deviceChoiceOptions;const{matchers,facingMode="environment",width,height}=deviceChoiceOptions;if(constraints.video={width,height,facingMode},deviceId&&advancedConstraints.push({deviceId}),!deviceId&&matchers?.length)for(const matcher of matchers){const matched=deviceList.filter((deviceInfo=>matcher.test(deviceInfo.label)));if(1===matched.length){constraints.video.deviceId=matched[0].deviceId;break}if(matched.length>1&&facingMode){advancedConstraints=advancedConstraints.concat(matched.map((matchingDevice=>({deviceId:matchingDevice.deviceId,facingMode}))));break}}return deviceId||matchers?.length||!facingMode||advancedConstraints.push({facingMode}),advancedConstraints.length>0&&(constraints.video={width,height,advanced:advancedConstraints}),constraints},getUserMedia=async(constraints,context="")=>await navigator.mediaDevices.getUserMedia(constraints),removeStreamTracks=stream=>{stream.getTracks().forEach((track=>{track.enabled=!1,track.stop(),stream.removeTrack(track)}))},resolveCameraPermission=async()=>await(async()=>{const mediaDeviceInfos=await(navigator.mediaDevices?.enumerateDevices?.());return!!mediaDeviceInfos?.find((mediaDeviceInfo=>mediaDeviceInfo.deviceId?.length>0))})()?Promise.resolve(!0):(async()=>{try{let stream=await getUserMedia({video:!0,audio:!1},"canGetUserMedia");return removeStreamTracks(stream),!0}catch(e){return!1}})();let barcodeDetector;const defaultBarcodeDetectorOptions={useNative:!1,formats:["ean_13","upc_a"]},getBarcodeDetector=async options=>{if(barcodeDetector)return barcodeDetector;return options.useNative&&"BarcodeDetector"in window||await __webpack_require__.e(631).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@undecaf/barcode-detector-polyfill/dist/main.js")).then((BCD=>{const{BarcodeDetectorPolyfill}=BCD;window.BarcodeDetector=BarcodeDetectorPolyfill})),window.BarcodeDetector.getSupportedFormats().then((formats=>0===formats.length?Promise.reject("No barcode detection"):(barcodeDetector=new window.BarcodeDetector(options),Promise.resolve(barcodeDetector))))},playWithRetry=async videoElement=>{try{return videoElement.pause(),await videoElement.play()}catch(error){return console.log(error),new Promise((resolve=>{setTimeout((()=>resolve(playWithRetry(videoElement))),100)}))}},useVideoCanvas=options=>{const{onDraw,onPlay,webcamVideo,trackSettings,shouldDraw=!0,canvas,hasPermission=!0,shouldPlay,timeoutDelay=17,zoom=1}=options,[context,setContext]=(0,react.useState)(),[hasListener,setHasListener]=(0,react.useState)(!1),[intervalIds,setIntervalIds]=(0,react.useState)([]);(0,react.useEffect)((()=>{setContext(null)}),[zoom,webcamVideo?.width,webcamVideo?.height,canvas?.width,canvas?.height]),(0,react.useEffect)((()=>{if(context||!canvas);else{setHasListener(!1);const canvasContext=canvas?.getContext("2d",{willReadFrequently:!0});if(!canvasContext)return;setContext(canvasContext)}}),[context,canvas]);const bounds=(0,react.useMemo)((()=>{if(!(webcamVideo&&trackSettings&&canvas))return;const effectiveZoom=Math.pow(zoom,2),trackWidth=trackSettings.width??webcamVideo.width,trackHeight=trackSettings.height??webcamVideo.height,centerX=trackWidth/2,centerY=trackHeight/2;return[centerX-centerX/effectiveZoom,centerY-centerY/effectiveZoom,trackWidth/effectiveZoom,trackHeight/effectiveZoom,0,0,canvas.width,canvas.height]}),[canvas,webcamVideo,trackSettings,zoom]),streamToCanvas=(0,react.useMemo)((()=>()=>{bounds&&context&&webcamVideo&&(context.drawImage(webcamVideo,...bounds),shouldDraw&&onDraw?.(webcamVideo))}),[bounds,onDraw,webcamVideo,shouldDraw,context]);(0,react.useEffect)((()=>{bounds&&hasPermission&&context&&webcamVideo&&!hasListener&&(webcamVideo.addEventListener("play",(()=>{var intervalId;intervalIds.forEach(window.clearInterval),streamToCanvas(),intervalId=window.setInterval(streamToCanvas,timeoutDelay),setIntervalIds([...intervalIds,intervalId])}),{once:!0}),shouldPlay&&playWithRetry(webcamVideo).then(onPlay),setHasListener(!0))}),[bounds,canvas,webcamVideo,onPlay,shouldPlay,hasPermission,context])},defaultDeviceChoiceOptions={matchers:[/ultra/i,/back/i],facingMode:"environment"},useWebcam=(options={})=>{const{deviceChoiceOptions,onDevices}=options,{hasPermission}=(()=>{const[hasPermission,setHasPermission]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{let active=!0;return resolveCameraPermission().then((permission=>{active&&setHasPermission(permission)})),()=>{active=!1}}),[setHasPermission]),{hasPermission}})(),webcamVideoRef=(0,react.useRef)(null),[webcamVideo,setWebcamVideo]=(0,react.useState)();(0,react.useEffect)((()=>{hasPermission&&webcamVideoRef.current&&setWebcamVideo(webcamVideoRef.current)}),[hasPermission,webcamVideoRef]);const{deviceList}=((hasPermission,onDevices)=>{const[deviceList,setDeviceList]=(0,react.useState)([]);return(0,react.useEffect)((()=>{let active=!0;return hasPermission&&listDevices().then((deviceList=>{active&&(setDeviceList(deviceList),onDevices?.(deviceList))})),()=>{active=!1}}),[hasPermission]),{deviceList}})(hasPermission,onDevices),combinedDeviceChoiceOptions=(0,react.useMemo)((()=>Object.assign({width:webcamVideo?.width??640,height:webcamVideo?.height??480},deviceChoiceOptions??defaultDeviceChoiceOptions)),[hasPermission,webcamVideo,deviceChoiceOptions]),{stream,trackSettings}=((hasPermission,deviceList,deviceChoiceOptions)=>{const[stream,setStream]=(0,react.useState)(),[trackSettings,setTrackSettings]=(0,react.useState)(),setStreamAndSettings=stream=>{setStream(stream),setTrackSettings(stream.getVideoTracks()?.[0].getSettings())},constraints=(0,react.useMemo)((()=>getMediaConstraintsForDeviceChoiceOptions(deviceList,deviceChoiceOptions)),[deviceList,deviceChoiceOptions]);return(0,react.useEffect)((()=>{let active=!0;return hasPermission&&constraints&&getUserMedia(constraints,"useDeviceStream #1").then((stream=>{active?setStreamAndSettings(stream):removeStreamTracks(stream)})).catch((error=>(console.log("requested device not available",error),getUserMedia({video:{facingMode:"environment"}},"useDeviceStream #2").then(setStream).catch((error=>(console.log("no environment-facing camera available",error),getUserMedia({video:!0},"useDeviceStream #3").then(setStreamAndSettings))))))),()=>{active=!1}}),[hasPermission,constraints]),{stream,trackSettings}})(hasPermission,deviceList,combinedDeviceChoiceOptions);return useStreamToVideoElement(webcamVideo,stream),{webcamVideo,webcamVideoRef,deviceList,hasPermission,stream,trackSettings}},useStreamToVideoElement=(videoElement,stream)=>{(0,react.useEffect)((()=>{videoElement&&stream&&(videoElement.srcObject=stream)}),[stream,videoElement])},useBarcodeScanner=options=>{const{zoom=1,barcodeDetectorOptions,deviceChoiceOptions,onScan,onDevices,shouldPlay=!0}=options,{webcamVideo,webcamVideoRef,hasPermission,stream,trackSettings}=useWebcam({deviceChoiceOptions,onDevices}),{onDraw,canDetect,canvas,canvasRef,detectedBarcodesRef}=(options=>{const{hasPermission,onScan,barcodeDetectorOptions=defaultBarcodeDetectorOptions}=options,canvasRef=(0,react.useRef)(null),[canvas,setCanvas]=(0,react.useState)();(0,react.useEffect)((()=>{hasPermission&&canvasRef.current&&setCanvas(canvasRef.current)}),[hasPermission]);const detectedBarcodesRef=(0,react.useRef)([]),[canDetect,setCanDetect]=(0,react.useState)(!0),onDraw=(0,react.useCallback)((async video=>{if(canvas&&canDetect)try{const barcodeDetector=await getBarcodeDetector(barcodeDetectorOptions);if(!canvas)return;const detectionSource=video??await createImageBitmap(canvas),detectedBarcodes=detectedBarcodesRef.current;try{const barcodes=await(barcodeDetector?.detect(detectionSource));barcodes.length>0&&barcodes.filter((code=>!detectedBarcodes.includes(code.rawValue))).length>0&&barcodes.forEach((barcode=>{detectedBarcodes.includes(barcode.rawValue)||(detectedBarcodes.push(barcode.rawValue),onScan?.(barcode.rawValue))}))}catch(error){console.log("unable to detect",error)}finally{detectionSource instanceof ImageBitmap&&detectionSource.close()}}catch(error){console.error("setting can detect to false",error),setCanDetect(!1)}}),[canvas]);return{onDraw,canDetect,canvas,canvasRef,detectedBarcodesRef}})({barcodeDetectorOptions,hasPermission,onScan});return useVideoCanvas({onDraw,webcamVideo,trackSettings,shouldDraw:canDetect,canvas,hasPermission,shouldPlay,zoom}),{webcamVideoRef,canvasRef,stream,detectedBarcodes:detectedBarcodesRef.current,hasPermission}};var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),BarcodeScanner=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/BarcodeScanner.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(BarcodeScanner.A,options);BarcodeScanner.A&&BarcodeScanner.A.locals&&BarcodeScanner.A.locals;const BarcodeScanner_BarcodeScanner=props=>{const{animate=!1,autoStart=!0,blur=0,canvasHeight=480,canvasWidth=640,className="",barcodeDetectorOptions,deviceChoiceOptions,onDevices,onScan,settings={},videoCropHeight=300,videoCropWidth=640,videoHeight=480,videoWidth=640,waitElement=null,zoom=1}=props,{scanLine,videoBorder}=settings,containerRef=(0,react.useRef)(null),webcamScannerPreviewStyle=(0,react.useMemo)((()=>({"--scanline":scanLine,"--video-border":videoBorder,"--video-width":`${videoWidth}px`,"--video-height":`${videoHeight}px`,"--canvas-width":`${canvasWidth}px`,"--canvas-height":`${canvasHeight}px`,"--video-crop-width":`${videoCropWidth}px`,"--video-crop-height":`${videoCropHeight}px`,"--video-blur":`${blur}px`})),[containerRef.current,scanLine,videoBorder,videoWidth,videoHeight,canvasWidth,canvasHeight,videoCropWidth,videoCropHeight,blur]),{canvasRef,hasPermission,webcamVideoRef}=useBarcodeScanner({onDevices,onScan,barcodeDetectorOptions,deviceChoiceOptions,shouldPlay:!1,zoom});return(0,react.useEffect)((()=>{hasPermission&&containerRef.current&&(Object.entries(webcamScannerPreviewStyle).forEach((([key,value])=>{containerRef.current?.style.setProperty(key,value)})),animate&&containerRef.current?.style.setProperty("animation-play-state","running"))}),[hasPermission,webcamScannerPreviewStyle,containerRef.current]),react.createElement("div",{ref:containerRef,className:`\n            react-barcode-scanner-container\n            ${animate?"animate":""}\n            ${className}\n        `},hasPermission?react.createElement(react.Fragment,null,react.createElement("video",{ref:webcamVideoRef,width:videoWidth,height:videoHeight,autoPlay:autoStart,playsInline:!0}),react.createElement("canvas",{ref:canvasRef,width:canvasWidth,height:canvasHeight}),scanLine&&react.createElement("div",{className:"scanline"},"-")):waitElement)};try{BarcodeScanner_BarcodeScanner.displayName="BarcodeScanner",BarcodeScanner_BarcodeScanner.__docgenInfo={description:"",displayName:"BarcodeScanner",props:{animate:{defaultValue:null,description:"",name:"animate",required:!1,type:{name:"boolean"}},autoStart:{defaultValue:null,description:"",name:"autoStart",required:!1,type:{name:"boolean"}},blur:{defaultValue:null,description:"",name:"blur",required:!1,type:{name:"number"}},canvasHeight:{defaultValue:null,description:"",name:"canvasHeight",required:!1,type:{name:"number"}},canvasWidth:{defaultValue:null,description:"",name:"canvasWidth",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},barcodeDetectorOptions:{defaultValue:null,description:"",name:"barcodeDetectorOptions",required:!1,type:{name:"BarcodeDetectorOptions"}},deviceChoiceOptions:{defaultValue:null,description:"",name:"deviceChoiceOptions",required:!1,type:{name:"DeviceChoiceOptions"}},devices:{defaultValue:null,description:"",name:"devices",required:!1,type:{name:"MediaDeviceInfo[]"}},onDevices:{defaultValue:null,description:"",name:"onDevices",required:!1,type:{name:"(devices: MediaDeviceInfo[]) => void"}},onScan:{defaultValue:null,description:"",name:"onScan",required:!0,type:{name:"(code: string) => void"}},preferDeviceLabelMatch:{defaultValue:null,description:"",name:"preferDeviceLabelMatch",required:!1,type:{name:"RegExp"}},settings:{defaultValue:null,description:"",name:"settings",required:!1,type:{name:"Record<string, string | RegExp>"}},videoCropHeight:{defaultValue:null,description:"",name:"videoCropHeight",required:!1,type:{name:"number"}},videoCropWidth:{defaultValue:null,description:"",name:"videoCropWidth",required:!1,type:{name:"number"}},videoHeight:{defaultValue:null,description:"",name:"videoHeight",required:!1,type:{name:"number"}},videoWidth:{defaultValue:null,description:"",name:"videoWidth",required:!1,type:{name:"number"}},waitElement:{defaultValue:null,description:"",name:"waitElement",required:!1,type:{name:"ReactNode"}},zoom:{defaultValue:null,description:"",name:"zoom",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BarcodeScanner.tsx#BarcodeScanner"]={docgenInfo:BarcodeScanner_BarcodeScanner.__docgenInfo,name:"BarcodeScanner",path:"src/components/BarcodeScanner.tsx#BarcodeScanner"})}catch(__react_docgen_typescript_loader_error){}const BarcodeScanner_stories={component:props=>{const{animate=!0,className,scanLine="none",canvasHeight=480,canvasWidth=640,videoHeight=480,videoWidth=640,videoCropHeight,videoCropWidth,zoom=1,blur=0}=props,[codes,setCodes]=(0,react.useState)([]),[devices,setDevices]=(0,react.useState)([]);return react.createElement(BarcodeScanner_BarcodeScanner,{animate,className,devices,onDevices:devices=>{setDevices(devices)},onScan:code=>{setCodes(codes.concat(code))},settings:{scanLine},canvasWidth,canvasHeight,videoWidth,videoHeight,videoCropHeight,videoCropWidth,zoom,blur})},title:"Components/BarcodeScanner"},Primary={args:{animate:!0,className:"",scanLine:"solid 3px red",zoom:1,blur:0,canvasHeight:376,canvasWidth:480,videoHeight:376,videoWidth:480,videoCropHeight:188,videoCropWidth:288}},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    animate: true,\n    className: '',\n    scanLine: 'solid 3px red',\n    zoom: 1,\n    blur: 0,\n    canvasHeight: 376,\n    canvasWidth: 480,\n    videoHeight: 376,\n    videoWidth: 480,\n    videoCropHeight: 188,\n    videoCropWidth: 288\n  }\n}",...Primary.parameters?.docs?.source}}}}}]);